#! /usr/bin/python
""" Scipt to scrape the national rail website for train times """
import urllib2
from BeautifulSoup import BeautifulSoup
import datetime
import argparse

def strip_tags(item):
    return item.text

def stringtime_to_datetime(string):
    """ Convert 08:59 to datetime """
    [hour, minute] = string.split(":")
    return datetime.datetime(now.year, now.month, now.day,
                             hour=int(hour), minute=int(minute))

def journey_duration(dep, arr):
    dep_dt = stringtime_to_datetime(dep)
    arr_dt = stringtime_to_datetime(arr)
    dur_secs = (arr_dt - dep_dt).total_seconds()
    dur_mins = dur_secs / 60.0
    return int(dur_mins)

# Get command line arguments
parser = argparse.ArgumentParser(description=__doc__)
parser.add_argument("-d", dest="TIME_OFFSET",
                    help="The time delta at which to search for train times",
                    default=-20, type=int)
parser.add_argument("-t", "--to", dest="TO_STATION",
                    help="To station", default="BSK")
parser.add_argument("-f", "--from", dest="FROM_STATION", default="WAT",
                    help="From station")
args = parser.parse_args()

now = datetime.datetime.now()
then = now + datetime.timedelta(minutes=args.TIME_OFFSET)

print("Trains from {} to {} leaving after {:02d}:{:02d}".format(args.FROM_STATION,
                                                         args.TO_STATION,
                                                         then.hour,
                                                         then.minute))

string_time = "/{:02.0f}{:02.0f}".format(then.hour, then.minute)

URL = ('http://ojp.nationalrail.co.uk/service/timesandfares/'+
       '{}/{}/today/'.format(args.FROM_STATION, args.TO_STATION) +
       '{}/dep#outwardJump'.format(string_time)
        )

soup = BeautifulSoup(urllib2.urlopen( URL).read())

departures = [strip_tags(i) for i in soup.findAll("td", { "class" : "dep" })]
arrivals = [strip_tags(i) for i in soup.findAll("td", { "class" : "arr" })]

# Print the results
print "Departs   Arrives   Takes"
for dep, arr in zip(departures, arrivals):
    print "{}     {}     {}".format(dep, arr, journey_duration(dep, arr))
